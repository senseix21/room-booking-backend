// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String    @unique
  password  String
  role      Role      @default(USER)
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Room {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  rent       Float
  facilities String[]
  picture    String
  bookings   Booking[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@index([title], map: "room_title_idx") // Index on room titles
}

model Booking {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  userId    String        @db.ObjectId
  roomId    String        @db.ObjectId
  startDate DateTime
  endDate   DateTime
  status    BookingStatus @default(PENDING)
  user      User          @relation(fields: [userId], references: [id])
  room      Room          @relation(fields: [roomId], references: [id])
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@index([userId, roomId, startDate, endDate], map: "booking_conflict_idx")
}

enum Role {
  USER
  ADMIN
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}
